// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExpenseSettled extends ethereum.Event {
  get params(): ExpenseSettled__Params {
    return new ExpenseSettled__Params(this);
  }
}

export class ExpenseSettled__Params {
  _event: ExpenseSettled;

  constructor(event: ExpenseSettled) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get param1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get param2(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get param3(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PaymentExpenseCreated extends ethereum.Event {
  get params(): PaymentExpenseCreated__Params {
    return new PaymentExpenseCreated__Params(this);
  }
}

export class PaymentExpenseCreated__Params {
  _event: PaymentExpenseCreated;

  constructor(event: PaymentExpenseCreated) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get param1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get param2(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get param3(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get param4(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DeSplit__getExpenseResult {
  value0: Address;
  value1: Address;
  value2: Array<Address>;
  value3: Array<BigInt>;
  value4: string;

  constructor(
    value0: Address,
    value1: Address,
    value2: Array<Address>,
    value3: Array<BigInt>,
    value4: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddressArray(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigIntArray(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): Array<Address> {
    return this.value2;
  }

  getValue3(): Array<BigInt> {
    return this.value3;
  }

  getValue4(): string {
    return this.value4;
  }
}

export class DeSplit extends ethereum.SmartContract {
  static bind(address: Address): DeSplit {
    return new DeSplit("DeSplit", address);
  }

  getExpense(_index: BigInt): DeSplit__getExpenseResult {
    let result = super.call(
      "getExpense",
      "getExpense(uint256):(address,address,address[],uint256[],string)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );

    return new DeSplit__getExpenseResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddressArray(),
      result[3].toBigIntArray(),
      result[4].toString()
    );
  }

  try_getExpense(
    _index: BigInt
  ): ethereum.CallResult<DeSplit__getExpenseResult> {
    let result = super.tryCall(
      "getExpense",
      "getExpense(uint256):(address,address,address[],uint256[],string)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DeSplit__getExpenseResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddressArray(),
        value[3].toBigIntArray(),
        value[4].toString()
      )
    );
  }

  getbalance(_user: Address): BigInt {
    let result = super.call("getbalance", "getbalance(address):(uint256)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBigInt();
  }

  try_getbalance(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getbalance", "getbalance(address):(uint256)", [
      ethereum.Value.fromAddress(_user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class PayAndCreateExpenseCall extends ethereum.Call {
  get inputs(): PayAndCreateExpenseCall__Inputs {
    return new PayAndCreateExpenseCall__Inputs(this);
  }

  get outputs(): PayAndCreateExpenseCall__Outputs {
    return new PayAndCreateExpenseCall__Outputs(this);
  }
}

export class PayAndCreateExpenseCall__Inputs {
  _call: PayAndCreateExpenseCall;

  constructor(call: PayAndCreateExpenseCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _splitBy(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }

  get _splitAmount(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class PayAndCreateExpenseCall__Outputs {
  _call: PayAndCreateExpenseCall;

  constructor(call: PayAndCreateExpenseCall) {
    this._call = call;
  }
}

export class SettleExpenseCall extends ethereum.Call {
  get inputs(): SettleExpenseCall__Inputs {
    return new SettleExpenseCall__Inputs(this);
  }

  get outputs(): SettleExpenseCall__Outputs {
    return new SettleExpenseCall__Outputs(this);
  }
}

export class SettleExpenseCall__Inputs {
  _call: SettleExpenseCall;

  constructor(call: SettleExpenseCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _expenseIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SettleExpenseCall__Outputs {
  _call: SettleExpenseCall;

  constructor(call: SettleExpenseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
